[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LAMAMA",
    "section": "",
    "text": "Bienvenue sur votre site dédié à l’apprentissage des différents langages\n\n\n\n\n\nBienvenue sur votre site dédié à l’apprentissage du langage R\n\n\nBienvenue sur LAMAMA, votre destination en ligne dédiée à l’exploration et à la maîtrise du langage informatique. Que vous soyez un novice avide de connaissances, un professionnel en quête d’expertise ou simplement un passionné désireux de découvrir de nouveaux langages, notre plateforme est conçue pour vous accompagner dans votre voyage d’apprentissage. Avec une richesse de ressources, des cours interactifs aux exercices pratiques, LAMAMA est votre compagnon idéal pour vous guider dans la maîtrise des langages de programmation les plus pertinents et innovants. Plongez dans notre monde virtuel et laissez-vous inspirer par la diversité et la puissance des langages informatiques sur LAMAMA.\n\n\nApprenez dès maintenant le langage R !\n\n \n\n\n\n© 2024 Louise Cochard - 09/04/2024"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "R",
    "section": "",
    "text": "R\n\n\n\n\n\n\nVous êtes sur la page dédié au langage R\n\n\n\n\n© 2024 Louise Cochard - 09/04/2024"
  },
  {
    "objectID": "python.html",
    "href": "python.html",
    "title": "Python",
    "section": "",
    "text": "Python\n\n\n\n\n\n\nVous êtes sur la page dédié au langage Python\n\n\nPython est un langage de programmation polyvalent, facile à lire et à apprendre. Aujourd’hui, nous allons nous concentrer sur les “structures de contrôle”, qui sont des outils essentiels pour diriger le flux d’exécution dans un programme Python.\n\n\nStructures de contrôle\n\n\nLes opérateurs\n\nLes opérateurs Python sont utilisés pour effectuer des opérations sur les variables et les valeurs. Les opérateurs de comparaison incluent égal à, différent de, supérieur à, inférieur à, supérieur ou égal à, et inférieur ou égal à.\n\n\n\n\nOpérateur comparaison\nDescription\n\n\n\n\nEgalité\n==\n\n\nDifférent de\n!=\n\n\nSupérieur\n&gt;\n\n\nInférieur\n&lt;\n\n\nSupérieur ou égale\n&gt;=\n\n\nInférieur ou égale\n&lt;=\n\n\n\nRenvoient soit Vrai, soit Faux, en fonction du résultat de la comparaison.\n\nLes opérateurs logiques et, ou et non sont souvent combinés avec les opérateurs de comparaison.\n\n\n\n\nOpérateur logique\nDescription\nRésultat\n\n\n\n\nAnd\nand\nTrue si les deux propositions sont vraies\n\n\nOr\nor\nTrue si au moins une des propositions est Vraie\n\n\nNot\nnot\ninverse de l’instruction\n\n\n\n\nLes opérateurs d’appartenance in et not in sont utilisés pour vérifier si une valeur ou une chaîne de caractères se trouve à l’intérieur d’une autre valeur, chaîne de caractères ou séquence.\n\n\n\n\n\n\n\n\n\nOpérateur logique\nDescription\nRésultat\n\n\n\n\nIn\nin\nTrue si la valeur spécifiée est présente dans l’objet.\n\n\nNot in\nnot in\nTrue si la valeur spécifiée n’est pas présente dans l’objet.\n\n\n\n# Exemples d'opérateurs de comparaison\nprint(\"Opérateurs de comparaison:\")\nprint(5 == 5)  # Égalité, renvoie True\nprint(5 != 2)  # Différent de, renvoie True\nprint(5 &gt; 3)   # Supérieur à, renvoie True\nprint(5 &lt; 8)   # Inférieur à, renvoie True\nprint(5 &gt;= 3)  # Supérieur ou égal à, renvoie True\nprint(5 &lt;= 8)  # Inférieur ou égal à, renvoie True\n\n# Exemples d'opérateurs logiques\nprint(\"\\nOpérateurs logiques:\")\nprint(True and False)  # and, renvoie False\nprint(True or False)   # or, renvoie True\nprint(not True)        # not, renvoie False\n\n# Exemples d'opérateurs d'appartenance\nprint(\"\\nOpérateurs d'appartenance:\")\nliste = [1, 2, 3, 4, 5]\nprint(3 in liste)       # in, renvoie True\nprint(6 not in liste)   # not in, renvoie True\n Opérateurs de comparaison: True True True True True True Opérateurs logiques: False True False Opérateurs d’appartenance: True True \n\nConditions\n\n# condition\nx = 100 \n\n# Première condition : vérifie si x est inférieur à 10\nif x &lt; 10:\n    print(\"x est inférieur à 10\")\n# Deuxième condition : vérifie si x est supérieur ou égal à 100\nelif x &gt;= 100:\n    print(\"x est supérieur ou égal à 100\")\n# Dernière condition : si toutes les conditions précédentes sont fausses\nelse:\n    print(\"x est supérieur à 10 mais inférieur à 100\")\nx est supérieur ou égal à 100\n# Initialisation des variables\nx = 100 \ny = 30 \n\n# Première condition : vérifie si x est inférieur à 10 ET y est supérieur à 20\nif (x &lt; 10) and (y &gt; 20):\n    print(\"x est inférieur à 10 et y est supérieur à 20\")\n# Deuxième condition : vérifie si x est supérieur ou égal à 100 OU y est supérieur ou égal à 30\nelif x &gt;= 100 or y &gt;= 30:\n    print(\"x est supérieur ou égal à 100 ou y est supérieur ou égal à 30\")\n# Dernière condition : si toutes les conditions précédentes sont fausses\nelse:\n    print(\"x est supérieur à 10\")\nx est supérieur ou égal à 100 ou y est supérieur ou égal à 30\n\nLes boucles\n\n\nLa boucle for est utilisée pour parcourir des structures de données : liste, tuple, tableau, chaîne de caractères ou un dictionnaire. La boucle commence par examiner le premier élément de la séquence, effectue des actions dans son corps, puis passe à l’élément suivant jusqu’à ce que la séquence soit terminée.\n\nBoucle avec mot-clé for, une variable temporairepour contenir chaque élément, le mot-clé in et la séquence à parcourir, suivis de deux points. Jusqu’au bout de l’élément\nAppliquer des opérations sur la variable temporaire dans le corps de la boucle pour effectuer diverses opérations.\nImbriquer des for\nSur les dictionnaires, on peut boucler sur les clés et les valeurs à l’aide de la méthode “items()”.\n\n\n# Exemple de boucle for\nfor i in range(5):\n    print(i)\n\nfruits = [\"pomme\", \"banane\", \"mangue\", \"cerise\"]\nfor fruit in fruits:\n    print(fruit)\n\nprint(\"Boucle for sur une liste:\")\nma_liste = [1, 2, 3, 4, 5]\nfor element in ma_liste:\n    print(element)\n\nnombres = [1, 2, 3, 4, 5]\nfor nombre in nombres:\n    if nombre % 2 == 0:\n        print(f\"{nombre} est pair\")\n    else:\n        print(f\"{nombre} est impair\")\n 0 1 2 3 4 pomme banane mangue cerise Boucle for sur une liste: 1 2 3 4 5 1 est impair 2 est pair 3 est impair 4 est pair 5 est impair \n\nLa boucle while itère sur un bloc de code tant qu’une condition spécifiée est vraie. Contrairement aux boucles “for”, les boucles “while” continuent l’itération tant que la condition reste vraie.\n\n“break” pour quitter prématurément une boucle “while”, même si la condition est toujours vraie.\n\n“else” peut être utilisée avec une boucle “while” pour spécifier un bloc de code qui s’exécutera lorsque la condition de la boucle ne sera plus vraie.\n\n\n“continue” permet d’ignorer le code restant dans l’itération actuelle de la boucle et de passer à l’itération suivante.\n\n\nSoyez prudent lorsque vous utilisez “continue” afin d’éviter de créer des boucles infinies.\n\n\n# Boucle while avec break\nprint(\"\\nBoucle while avec break:\")\ni = 1\nwhile i &lt;= 5:\n    print(i)\n    if i == 3:\n        print(\"Break à 3\")\n        break\n    i += 1\n\n# Boucle while avec continue\nprint(\"\\nBoucle while avec continue:\")\ni = 0\nwhile i &lt; 5:\n    i += 1\n    if i == 3:\n        continue\n    print(i)\n\n# Boucle while avec else\nprint(\"\\nBoucle while avec else:\")\ni = 1\nwhile i &lt;= 5:\n    print(i)\n    i += 1\nelse:\n    print(\"La condition n'est plus vraie (i &gt; 5)\")\n\n# Exemple de boucle while True\nprint(\"Boucle while True avec un mécanisme de sortie :\")\n\ncompteur = 0\nwhile True:\n    compteur += 1\n    print(compteur)\n\n    # Interrompre la boucle si compteur atteint 5\n    if compteur == 5:\n        print(\"Compteur a atteint 5, sortir de la boucle.\")\n        break\n Boucle while avec break: 1 2 3 Break à 3 Boucle while avec continue: 1 2 4 5 Boucle while avec else: 1 2 3 4 5 La condition n’est plus vraie (i &gt; 5) Boucle while True avec un mécanisme de sortie : 1 2 3 4 5 Compteur a atteint 5, sortir de la boucle. \n\nMaintenant, exerce-toi en cliquant sur l’image ci-dessous.\n\n \n\n\n\n© 2024 Louise Cochard - 09/04/2024"
  },
  {
    "objectID": "r.html",
    "href": "r.html",
    "title": "Exemple d’Analyse",
    "section": "",
    "text": "R\n\n\n\n\n\n\nL’extension rmarkdown est un outil puissant pour la création de documents dynamiques dans l’environnement de programmation R. Il permet d’intégrer du code R, des résultats, et des narrations dans un seul document. Voici une explication détaillée de ses caractéristiques et de son fonctionnement : Les documents générés peuvent être au format HTML, PDF, Word, et bien d’autres. C’est donc un outil très pratique pour l’exportation, la communication et la diffusion de résultats d’analyse.\n\n\n\nL’Analyse en 7 étapes\n\n\nPour cette analyse nous allons prendre les données du jeu de données “diamonds”, disponibles dans le package ggplot2 en R, constituent un choix excellent pour mener une analyse exploratoire approfondie. Ce jeu de données comporte des informations sur les prix et les caractéristiques de près de 54 000 diamants. Voici un exemple d’analyse que vous pourriez entreprendre avec ces données :\n\n\nÉtape 1: Préparation de l’Environnement\n\n\nAvant de démarrer tout projet, il est essentiel de charger les bibliothèques nécessaires et de charger les données pertinentes.\n\n\n# Chargement des packages nécessaires\nlibrary(ggplot2)\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.3.2\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Chargement des données\ndata(\"diamonds\")\n\n\nÉtape 2: Aperçu des Données\n\n\nL’aperçu des données, qui comprend l’affichage des premières lignes est crucial lors d’une analyse pour plusieurs raisons :\nCompréhension initiale des données: En examinant les premières lignes, on obtient une idée immédiate de la structure des données, des types de variables et des valeurs qu’elles contiennent. Cela permet de mieux comprendre la nature des données avec lesquelles on travaille.\nDétection des erreurs ou des valeurs aberrantes: L’examen des premières lignes peut aider à identifier d’éventuelles erreurs de saisie ou des valeurs aberrantes qui pourraient affecter l’analyse. Par exemple, des valeurs manquantes, des valeurs nulles inattendues ou des valeurs extrêmement élevées ou basses peuvent être repérées rapidement.\nIdentification des tendances ou des motifs initiaux: En regardant les premières lignes, on peut commencer à repérer des tendances ou des motifs initiaux dans les données. Cela peut orienter l’analyse future en mettant en lumière des aspects importants à explorer davantage.\n\n\n#Affichage des premières lignes\n\nhead(diamonds)\n\n# A tibble: 6 × 10\n  carat cut       color clarity depth table price     x     y     z\n  &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n\n\n\nCompréhension des distributions et des statistiques descriptives:  Le résumé des données fournit des statistiques descriptives telles que la moyenne, la médiane, l’écart type, etc. Cela aide à comprendre la distribution des variables et à identifier les valeurs centrales ainsi que la dispersion des données. En somme, l’aperçu initial des données est une étape cruciale dans tout projet d’analyse, car il fournit les bases nécessaires pour comprendre les données et guider les étapes suivantes de l’analyse.\n\n\n# Résumé des données\nsummary(diamonds)\n\n     carat               cut        color        clarity          depth      \n Min.   :0.2000   Fair     : 1610   D: 6775   SI1    :13065   Min.   :43.00  \n 1st Qu.:0.4000   Good     : 4906   E: 9797   VS2    :12258   1st Qu.:61.00  \n Median :0.7000   Very Good:12082   F: 9542   SI2    : 9194   Median :61.80  \n Mean   :0.7979   Premium  :13791   G:11292   VS1    : 8171   Mean   :61.75  \n 3rd Qu.:1.0400   Ideal    :21551   H: 8304   VVS2   : 5066   3rd Qu.:62.50  \n Max.   :5.0100                     I: 5422   VVS1   : 3655   Max.   :79.00  \n                                    J: 2808   (Other): 2531                  \n     table           price             x                y         \n Min.   :43.00   Min.   :  326   Min.   : 0.000   Min.   : 0.000  \n 1st Qu.:56.00   1st Qu.:  950   1st Qu.: 4.710   1st Qu.: 4.720  \n Median :57.00   Median : 2401   Median : 5.700   Median : 5.710  \n Mean   :57.46   Mean   : 3933   Mean   : 5.731   Mean   : 5.735  \n 3rd Qu.:59.00   3rd Qu.: 5324   3rd Qu.: 6.540   3rd Qu.: 6.540  \n Max.   :95.00   Max.   :18823   Max.   :10.740   Max.   :58.900  \n                                                                  \n       z         \n Min.   : 0.000  \n 1st Qu.: 2.910  \n Median : 3.530  \n Mean   : 3.539  \n 3rd Qu.: 4.040  \n Max.   :31.800  \n                 \n\n\n\nÉtape 3: Analyse de la Distribution des Prix\n\n\nUn graphique de dispersion montrant la relation entre le prix et le carat dans un ensemble de données de diamants offre une visualisation puissante de la corrélation entre ces deux variables. Voici une explication de cette relation:  Tendance générale: En traçant le prix sur l’axe des ordonnées (vertical) et le carat sur l’axe des abscisses (horizontal), le graphique de dispersion permet d’observer la tendance générale des données. Habituellement, on s’attend à voir une relation positive, ce qui signifie que les prix des diamants ont tendance à augmenter avec le poids en carats. Degré de dispersion: En examinant la dispersion des points autour de la tendance générale, on peut évaluer à quel point la relation entre le prix et le carat est forte ou faible. Une dispersion faible indique une relation plus étroite entre les deux variables, tandis qu’une dispersion plus importante suggère une relation moins cohérente. Détection des valeurs aberrantes: Les points qui s’éloignent considérablement de la tendance générale peuvent être des valeurs aberrantes, c’est-à-dire des observations qui se distinguent du reste des données. Ces valeurs peuvent être importantes à examiner de plus près, car elles pourraient révéler des informations intéressantes sur les diamants qui se démarquent en termes de prix par rapport à leur poids en carats. Analyse des clusters: Parfois, le graphique de dispersion peut révéler des clusters ou des regroupements de points, ce qui peut indiquer la présence de sous-populations distinctes dans les données. Par exemple, il pourrait y avoir un cluster de diamants avec un poids en carats relativement faible mais un prix élevé, ce qui pourrait indiquer la présence de diamants de haute qualité mais de petite taille.\n\n\n# Histogramme de la distribution des prix\nggplot(diamonds, aes(x = price)) +\n  geom_histogram(binwidth = 500, fill = \"blue\", color = \"black\") +\n  theme_minimal() +\n  labs(title = \"Distribution des Prix des Diamants\",\n       x = \"Prix\", y = \"Fréquence\")\n\n\n\n\n\n\n\n\n\nEn somme, le graphique de dispersion de la relation entre le prix et le carat offre une vue d’ensemble intuitive et informative de la relation entre ces deux variables clés dans l’ensemble de données de diamants, permettant ainsi une analyse plus approfondie des facteurs influençant les prix des diamants.\n\n\nÉtape 4: Relation entre le Prix et la Qualité du Carat\n\n\nUn graphique de dispersion est un outil visuel puissant pour explorer la relation entre deux variables continues, comme le prix et le poids en carats dans le cas des diamants. Voici une explication de la signification de ce graphique dans le contexte de la relation entre le prix et la qualité du carat:\nAxe horizontal (X) - Carat: Sur l’axe horizontal, nous avons le poids en carats des diamants. Chaque point sur l’axe représente un diamant individuel dans l’ensemble de données. Le poids en carats est une mesure importante de la taille d’un diamant et est souvent associé à sa valeur. Axe vertical (Y) - Prix: Sur l’axe vertical, nous avons les prix des diamants correspondants. Chaque point représente le prix d’un diamant, aligné avec son poids en carats sur l’axe horizontal. Le prix est une mesure clé de la valeur d’un diamant et est influencé par plusieurs facteurs, dont le poids en carats. Tendance générale: En examinant le schéma général formé par les points sur le graphique, nous pouvons observer s’il existe une tendance ou une relation entre le prix et le poids en carats. Habituellement, dans le contexte des diamants, on s’attend à voir une tendance positive, ce qui signifie que les prix augmentent généralement avec le poids en carats. Cependant, des variations peuvent exister en raison d’autres facteurs tels que la qualité de la taille, la pureté et la couleur du diamant. Dispersion des points: La dispersion des points autour de la tendance générale peut révéler des informations supplémentaires sur la variabilité des prix pour un poids en carats donné. Une dispersion plus large peut indiquer une plus grande variabilité des prix pour les diamants de taille similaire, tandis qu’une dispersion plus étroite peut indiquer une cohérence plus élevée des prix.\n\n\n# Graphique de dispersion montrant la relation entre le prix et le carat\nggplot(diamonds, aes(x = carat, y = price)) +\n  geom_point(alpha = 0.5) +\n  theme_light() +\n  labs(title = \"Prix par Rapport au Carat\",\n       x = \"Carat\", y = \"Prix\")\n\n\n\n\n\n\n\n\n\nEn somme, le graphique de dispersion permet de visualiser facilement la relation entre le prix et la qualité du carat des diamants, offrant ainsi des insights sur la manière dont ces deux variables sont liées dans l’ensemble de données.\n\n\nÉtape 5: Analyse par Catégorie de Taille\n\n\nUn boxplot du prix par catégorie de taille dans un ensemble de données de diamants offre une visualisation concise et informative de la distribution des prix en fonction des différentes catégories de taille. Voici une explication de cette analyse:  Comparaison des distributions: Le boxplot divise les données en catégories de taille et représente la distribution des prix au sein de chaque catégorie sous forme de boîtes. En comparant ces boîtes les unes par rapport aux autres, on peut observer les différences de distribution des prix entre les différentes catégories de taille. Tendances centrales: La ligne médiane à l’intérieur de chaque boîte représente la médiane des prix pour chaque catégorie de taille. En examinant les positions relatives de ces médianes, on peut identifier les tendances centrales des prix pour les différentes catégories de taille. Par exemple, une médiane plus élevée dans une catégorie de taille indique généralement des prix plus élevés dans cette catégorie par rapport aux autres. Variabilité des prix: La taille des boîtes dans le boxplot représente la variabilité des prix au sein de chaque catégorie. Une boîte plus grande indique une plus grande dispersion des prix, tandis qu’une boîte plus petite indique une dispersion plus faible. Cela permet d’évaluer la cohérence des prix au sein de chaque catégorie de taille. Détection des valeurs aberrantes: Les points situés à l’extérieur des moustaches du boxplot peuvent être des valeurs aberrantes, ce qui signifie des observations qui se distinguent considérablement du reste des données dans une catégorie de taille donnée. Ces valeurs peuvent nécessiter une attention particulière pour comprendre pourquoi elles diffèrent autant des autres observations.\n\n\n# Boxplot du prix par catégorie de taille\nggplot(diamonds, aes(x = cut, y = price, fill = cut)) +\n  geom_boxplot() +\n  theme_classic() +\n  labs(title = \"Prix des Diamants par Qualité de Taille\", \n       x = \"Qualité de Taille\", y = \"Prix\")\n\n\n\n\n\n\n\n\n\nEn conclusion, le boxplot du prix par catégorie de taille fournit une vue d’ensemble claire et informative de la distribution des prix des diamants en fonction de leur taille, permettant ainsi une comparaison facile entre les différentes catégories et une identification des tendances et des valeurs aberrantes.\n\n\nÉtape 6: Corrélation entre les Caractéristiques\n\n\nL’utilisation de la fonction cor() pour calculer les corrélations entre les caractéristiques dans un ensemble de données de diamants permet d’explorer les relations linéaires entre les variables quantitatives. Voici une explication de cette analyse:\nMatrice de corrélation: La fonction cor() calcule les corrélations entre toutes les paires de variables quantitatives dans l’ensemble de données, ce qui produit une matrice de corrélation. Cette matrice indique la force et la direction de la relation linéaire entre chaque paire de variables. Interprétation des coefficients de corrélation: Les coefficients de corrélation peuvent varier de -1 à 1. Un coefficient proche de 1 indique une corrélation positive parfaite, ce qui signifie que les variables augmentent ensemble. Un coefficient proche de -1 indique une corrélation négative parfaite, ce qui signifie que les variables varient en sens opposé. Un coefficient proche de 0 indique une faible corrélation linéaire. Identification des relations importantes: En examinant la matrice de corrélation, on peut identifier les paires de variables qui sont fortement corrélées entre elles. Ces relations peuvent être importantes à explorer davantage, car elles indiquent des liens potentiels entre les caractéristiques des diamants. Orientation de l’analyse: Les résultats de la corrélation peuvent orienter l’analyse future en mettant en évidence les variables qui sont étroitement liées les unes aux autres. Par exemple, si le prix est fortement corrélé avec le poids en carats, cela pourrait indiquer que le poids en carats est un facteur important dans la détermination du prix des diamants.\n\n\n# Utilisation de cor() pour calculer les corrélations\ncor(diamonds[,c(\"price\", \"carat\", \"depth\", \"table\")])\n\n           price      carat       depth      table\nprice  1.0000000 0.92159130 -0.01064740  0.1271339\ncarat  0.9215913 1.00000000  0.02822431  0.1816175\ndepth -0.0106474 0.02822431  1.00000000 -0.2957785\ntable  0.1271339 0.18161755 -0.29577852  1.0000000\n\n\n\nEn conclusion, l’utilisation de la fonction cor() pour calculer les corrélations entre les caractéristiques dans un ensemble de données de diamants permet d’explorer les relations linéaires entre les variables quantitatives et d’identifier les relations importantes à explorer davantage dans le cadre de l’analyse des diamants.\n\n\nÉtape 7: Conclusion de l’Analyse\n\n\n\n\nCes graphiques et analyses fournissent un aperçu de la distribution des prix des diamants, ainsi que de la façon dont les attributs comme le carat et la qualité de la taille influencent ces prix.\n\n\nLa corrélation peut révéler des relations intéressantes entre les différentes variables numériques de l’ensemble de données.\n\n\n\nMaintenant, exercez-vous en cliquant sur l’image ci-dessous.\n\n \n\n\n\n© 2024 Louise Cochard - 09/04/2024"
  },
  {
    "objectID": "exerciceR.html",
    "href": "exerciceR.html",
    "title": "Exercices R",
    "section": "",
    "text": "Bienvenue dans les exercices d’analyse en R\n\n\n\n\n\n\n\n\n© 2024 Louise Cochard - 09/04/2024"
  },
  {
    "objectID": "exerciceP.html",
    "href": "exerciceP.html",
    "title": "Exercices Python",
    "section": "",
    "text": "Bienvenue dans les exercices d’analyse en R\n\n\n\n\n\n\n\n\n© 2024 Louise Cochard - 09/04/2024"
  },
  {
    "objectID": "apropos.html",
    "href": "apropos.html",
    "title": "A propos",
    "section": "",
    "text": "Infos\n\n\nJe m’appelle Louise, diplômée en physique-chimie et sciences de la vie et de la terre. J’ai commencé ma carrière dans la restauration, où j’ai appris l’importance du travail d’équipe et de l’adaptabilité. Depuis début 2023, je suis engagée dans la gendarmerie, où j’ai développé des compétences en gestion de crise et en communication. En parallèle, je poursuis des études en intelligence artificielle pour mieux appréhender les défis technologiques futurs. Mon dynamisme et ma volonté d’apprendre caractérisent le plus mon parcours.\n\n\nPour en savoir plus, je vous laisse cliqué sur l’image ci-dessous\n\n \n\n\n\n© 2024 Louise Cochard - 09/04/2024"
  },
  {
    "objectID": "rr.html",
    "href": "rr.html",
    "title": "Générer un rapport R Markdown",
    "section": "",
    "text": "R\n\n\n\n\n\n\nL’extension rmarkdown est un outil puissant pour la création de documents dynamiques dans l’environnement de programmation R. Il permet d’intégrer du code R, des résultats, et des narrations dans un seul document. Voici une explication détaillée de ses caractéristiques et de son fonctionnement : Les documents générés peuvent être au format HTML, PDF, Word, et bien d’autres. C’est donc un outil très pratique pour l’exportation, la communication et la diffusion de résultats d’analyse.\n\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\n\n\nLe chunk (zone grise) juste au dessus est le chunk qui fixe les options pour l’ensemble du document. Les paramètres fixés dans ce chunk agiront pour tous les autres.\nPour retrouver la fiche récapitulative de RMarkdown : &gt; Help/Cheat Sheets/ R Markdown Cheat Sheet\n\n\nFusion de R et Markdown\n\n\nRMarkdown combine le langage de programmation R avec la syntaxe de formatage de texte Markdown. Cela permet d’écrire du texte formaté (comme en HTML ou LaTeX) tout en exécutant du code R.\n\nDocuments Dynamiques\n\nLes documents RMarkdown sont dynamiques, ce qui signifie que les résultats du code R (comme les graphiques ou les tableaux) sont intégrés directement dans le document.\n\nFlexibilité de Format\n\nLes documents RMarkdown peuvent être convertis en plusieurs formats, y compris HTML, PDF et Word.\n\nÉcriture du Document\n\nVous commencez par écrire un document en utilisant la syntaxe Markdown pour le texte et des blocs de code spéciaux (délimités par {r} et) pour le code R.\n\nExécution et Conversion\n\nLorsque le document est “tricoté” (le processus de conversion), le code R est exécuté et ses résultats sont incorporés dans le document final.\n\nRésultats Intégrés\n\nLes résultats, qu’il s’agisse de sorties textuelles, de tableaux ou de graphiques, sont affichés à l’endroit exact où le bloc de code correspondant se trouve dans le texte.\n\nUtilisations de RMarkdown\n\nRapports de Données : Pour générer des rapports qui incluent à la fois l’analyse (code R) et les interprétations (texte). Documents Académiques : Pour des articles de recherche, des thèses, où les analyses et leurs descriptions vont de pair. Présentations : Peut être utilisé pour créer des diapositives de présentation intégrant des analyses en temps réel. Notebooks : Pour créer des notebooks interactifs, similaires à Jupyter Notebooks, mais dans R. Avantages Reproductibilité : Les documents RMarkdown facilitent la reproductibilité des analyses, un élément clé de la science des données. Efficacité : Ils permettent une mise à jour automatique des résultats et des graphiques en cas de modification des données ou du code. Polyvalence : Adapté pour une large gamme d’usages, de l’éducation à la recherche, en passant par le reporting d’entreprise. Générer le Document Pour générer un document à partir d’un fichier RMarkdown une fois que votre analyse est terminée, vous utiliserez principalement la fonction “Knit” dans RStudio. Voici les étapes à suivre et les packages nécessaires :\n\nOuvrez votre fichier RMarkdown dans RStudio.\n\n\nCliquez sur le bouton “Knit” dans la barre d’outils. Ce bouton se trouve généralement en haut du script RMarkdown. Il est représenté par une petite icône avec une pelote de laine et une aiguille.\n\n\nChoisissez le format de sortie. RMarkdown supporte plusieurs formats de sortie tels que HTML, PDF ou Word. Le format de sortie peut être spécifié dans l’en-tête YAML de votre document.\n\n\nNommez et enregistrez votre fichier. RStudio générera le document dans le format choisi et vous demandera où l’enregistrer.\n\n\n\nPackages Nécessaires\n\n\nPour utiliser RMarkdown et générer des documents, vous aurez besoin de certains packages. Les plus importants sont :\n\n\nrmarkdown\n\n\nLe package principal pour travailler avec RMarkdown.\n\n\n#install.packages(\"rmarkdown\")\n\n\nknitr\n\n\nUtilisé pour “tricoter” le document, c’est-à-dire pour exécuter le code R et le combiner avec le texte.\n\n\n#install.packages(\"knitr\")\n\n\nggplot2 (optionnel)\n\n\nSi votre analyse implique des visualisations de données.\n\n\n#install.packages(\"ggplot2\")\n\n\ndplyr (optionnel)\n\n\nPour la manipulation de données.\n\n\n#install.packages(\"dplyr\")\n\n\nPour le Format PDF\n\n\nSi vous souhaitez générer des documents au format PDF, vous aurez besoin d’une installation LaTeX. Une option facile est d’installer TinyTeX, une distribution LaTeX légère :\n\n\nInstaller TinyTeX :\n\n\n#install.packages(\"tinytex\")\n#tinytex::install_tinytex()\n\n\nAprès l’Installation\n\n\nAprès avoir installé les packages nécessaires, vous pouvez simplement ouvrir votre fichier RMarkdown dans RStudio et cliquer sur “Knit” pour générer le document. Assurez-vous que toutes les dépendances de votre analyse (comme les packages R spécifiques) sont également installées et disponibles.\n\n\nÉléments d’un document R Markdown\n\n\nEn-tête (préambule)\n\n\nLa première partie du document est son en-tête. Il se situe en tout début de document, et est délimité par trois tirets (—) avant et après:\n“title:”Titre” author: “Prénom Nom” date: “10 avril 2017” output: html_document”\n\n\nCet en-tête contient les métadonnées du document, comme son titre, son auteur, sa date, plus tout un tas d’options possibles qui vont permettre de configurer ou personnaliser l’ensemble du document et son rendu. Ici, par exemple, la ligne output: html_document indique que le document généré doit être au format HTML.\n\n\nTexte du document\n\n\nTitres\n\n# pour un titre de niveau 1 (le plus grand)\n## pour un titre de niveau 2\n### pour un titre de niveau 3, et ainsi de suite jusqu’à ###### pour un titre de niveau 6.\nEmphase\n*texte* ou _texte_ pour de l’italique\n**texte** ou __texte__ pour du gras\n***texte*** ou ___texte___ pour gras et italique\n~~texte~~ pour barrer le texte\nListes\nUtilisez *, +, ou - pour les listes non ordonnées\nUtilisez des nombres suivis d’un point pour les listes ordonnées\n\n\nMaintenant, un exemple d’analyse cliquez sur l’image ci-dessous"
  }
]